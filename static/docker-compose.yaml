version: '3.9'

services:
  web:
    container_name: web
    build: .
    command: sh -c "cron && ./wait-for-it.sh db:5432 -- sh -c 'python manage.py migrate && python manage.py runserver 0.0.0.0:8000'"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      DB_NAME: rest-auth
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
      DB_PORT: 5432
      CACHE_URL: redis://redis:6379/1 
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:16
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: rest-auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  celery:
    container_name: Celery
    build: .
    command: celery -A static worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - redis
      - db

  celery-beat:
    container_name: Celery-beat
    build: .
    command: celery -A static beat --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - redis
      - db

  redis:
    container_name: Redis
    image: redis:latest
    ports:
      - "6379:6379"

  cron:
    container_name: Cron
    build: .
    command: sh -c "cron && tail -f /var/log/cron.log"
    volumes:
      - .:/code
    depends_on:
      - db

networks:
  default:
    driver: bridge

volumes:
  pgdata:

